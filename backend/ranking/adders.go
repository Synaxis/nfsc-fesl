package ranking

// This file was generated by go:generate
// Do not do any modifications here

import (
	"strconv"

	"github.com/Synaxis/nfsc-fesl/backend/model"
)

var (
	adders = map[string]Adder{
		"c_ft": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.FacialHairType, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.FacialHairType = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_team": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Faction, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Faction = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_hrc": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.HairColor, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.HairColor = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_hrs": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.HairStyle, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.HairStyle = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_skc": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.SkinColor, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.SkinColor = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_ltp": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.CLtp, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.CLtp = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_ltm": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.CLtm, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.CLtm = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_fhrs": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.CFhrs, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.CFhrs = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_slm": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.CSlm, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.CSlm = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"cdm": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Cdm, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Cdm = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"edm": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Edm, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Edm = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_kit": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.PlayerType, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.PlayerType = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_wallet_hero": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.HeroPoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.HeroPoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_wallet_valor": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ValorPoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ValorPoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"games": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.GamesPlayed, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.GamesPlayed = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"elo": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Elo, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Elo = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"level": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Level, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Level = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"xp": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.XP, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.XP = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ct": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.TimePlayed, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.TimePlayed = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ki": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kills, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kills = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"dt": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Deaths, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Deaths = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"su": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Suicides, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Suicides = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"win": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Wins, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Wins = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"los": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Losses, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Losses = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fi": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.BulletsFired, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.BulletsFired = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"hi": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.BulletsHit, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.BulletsHit = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"rs": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Score, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Score = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ts": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.TeamScore, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.TeamScore = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ss": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.SkillScore, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.SkillScore = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"cs": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.CaptureScore, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.CaptureScore = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"prs": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.PrestigeLevel, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.PrestigeLevel = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ppt": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.PrestigePoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.PrestigePoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_tut": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.PlayedTutorial, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.PlayedTutorial = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"awybt": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.AwayBonusMedal, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.AwayBonusMedal = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"dmc": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.DailyMissionsCompleted, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.DailyMissionsCompleted = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"gsco": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Globals.GlobalScore, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Globals.GlobalScore = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"expts": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Globals.GlobalXP, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Globals.GlobalXP = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"bnspt": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Globals.GlobalAwayBonus, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Globals.GlobalAwayBonus = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb3": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[3], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[3] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb4": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[4], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[4] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb5": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[5], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[5] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_aprweb6": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WebKey[6], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WebKey[6] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6000": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6000], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6000] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6001": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6001], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6001] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6002": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6002], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6002] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6003": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6003], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6003] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6004": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6004], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6004] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6005": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6005], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6005] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6006": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6006], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6006] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6007": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6007], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6007] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6008": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6008], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6008] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6009": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6009], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6009] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6010": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6010], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6010] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6011": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6011], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6011] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6012": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6012], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6012] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6013": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6013], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6013] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6014": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6014], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6014] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6015": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6015], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6015] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6016": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6016], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6016] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6017": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6017], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6017] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6018": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6018], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6018] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6019": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6019], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6019] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6020": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6020], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6020] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6021": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6021], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6021] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6022": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6022], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6022] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6023": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6023], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6023] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6024": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6024], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6024] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6025": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6025], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6025] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6026": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6026], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6026] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6027": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6027], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6027] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6028": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6028], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6028] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6029": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6029], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6029] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6030": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6030], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6030] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6031": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6031], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6031] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6032": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6032], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6032] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6033": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6033], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6033] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6034": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6034], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6034] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6035": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6035], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6035] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6036": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6036], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6036] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6037": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6037], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6037] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6038": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6038], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6038] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6039": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6039], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6039] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6040": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6040], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6040] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6041": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6041], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6041] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6042": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6042], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6042] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6043": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6043], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6043] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6044": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6044], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6044] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6045": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6045], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6045] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6046": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6046], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6046] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6047": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6047], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6047] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6048": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6048], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6048] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6049": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6049], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6049] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6050": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6050], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6050] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6051": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6051], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6051] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6052": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6052], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6052] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6053": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6053], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6053] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6054": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6054], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6054] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6055": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6055], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6055] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6056": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6056], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6056] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6057": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6057], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6057] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6058": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6058], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6058] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6059": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6059], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6059] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6060": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6060], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6060] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6061": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6061], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6061] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6062": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6062], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6062] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6063": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6063], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6063] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6064": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6064], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6064] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6065": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6065], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6065] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6066": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6066], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6066] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6067": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6067], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6067] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6068": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6068], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6068] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6069": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6069], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6069] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6070": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6070], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6070] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6071": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6071], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6071] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6072": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6072], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6072] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6073": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6073], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6073] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6074": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6074], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6074] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6075": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6075], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6075] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6076": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6076], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6076] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6077": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6077], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6077] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6078": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6078], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6078] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6079": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6079], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6079] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6080": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6080], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6080] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6081": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6081], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6081] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6082": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6082], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6082] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6083": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6083], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6083] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6084": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6084], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6084] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6085": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6085], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6085] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6086": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6086], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6086] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6087": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6087], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6087] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6088": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6088], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6088] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6089": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6089], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6089] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6090": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6090], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6090] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6091": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6091], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6091] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6092": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6092], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6092] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6093": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6093], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6093] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6094": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6094], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6094] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6095": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6095], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6095] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6096": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6096], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6096] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6097": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6097], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6097] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6098": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6098], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6098] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6099": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6099], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6099] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6100": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6100], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6100] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6101": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6101], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6101] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6102": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6102], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6102] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6103": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6103], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6103] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6104": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6104], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6104] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6105": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6105], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6105] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6106": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6106], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6106] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6107": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6107], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6107] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6108": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6108], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6108] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6109": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6109], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6109] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6110": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6110], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6110] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6111": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6111], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6111] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6112": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6112], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6112] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6113": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6113], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6113] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6114": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6114], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6114] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6115": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6115], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6115] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6116": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6116], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6116] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6117": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6117], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6117] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6118": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6118], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6118] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6119": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6119], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6119] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6120": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6120], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6120] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6121": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6121], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6121] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6122": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6122], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6122] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6123": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6123], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6123] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6124": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6124], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6124] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6125": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6125], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6125] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6126": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6126], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6126] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6127": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6127], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6127] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6128": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6128], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6128] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6129": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6129], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6129] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6130": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6130], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6130] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6131": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6131], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6131] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6132": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6132], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6132] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6133": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6133], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6133] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6134": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6134], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6134] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6135": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6135], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6135] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6136": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6136], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6136] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6137": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6137], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6137] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6138": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6138], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6138] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6139": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6139], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6139] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6140": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6140], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6140] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6141": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6141], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6141] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6142": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6142], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6142] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6143": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6143], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6143] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6144": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6144], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6144] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6145": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6145], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6145] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6146": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6146], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6146] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6147": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6147], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6147] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6148": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6148], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6148] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6149": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6149], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6149] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6150": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6150], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6150] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6151": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6151], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6151] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6152": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6152], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6152] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6153": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6153], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6153] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6154": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6154], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6154] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6155": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6155], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6155] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6156": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6156], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6156] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6157": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6157], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6157] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6158": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6158], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6158] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6159": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6159], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6159] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6160": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6160], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6160] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6161": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6161], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6161] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6162": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6162], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6162] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6163": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6163], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6163] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6164": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6164], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6164] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6165": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6165], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6165] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6166": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6166], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6166] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6167": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6167], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6167] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6168": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6168], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6168] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6169": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6169], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6169] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6170": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6170], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6170] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6171": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6171], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6171] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6172": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6172], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6172] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6173": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6173], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6173] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6174": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6174], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6174] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6175": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6175], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6175] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6176": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6176], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6176] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6177": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6177], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6177] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6178": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6178], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6178] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6179": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6179], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6179] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6180": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6180], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6180] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6181": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6181], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6181] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"aw6182": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Awards[6182], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Awards[6182] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"mid0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Missions[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Missions[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"mid1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Missions[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Missions[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"mid2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.Missions[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.Missions[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_mid0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.PlayedMissions[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.PlayedMissions[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_mid1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.PlayedMissions[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.PlayedMissions[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_mid2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.PlayedMissions[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.PlayedMissions[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_cmid0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.CompletedMissions[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.CompletedMissions[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_cmid1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.CompletedMissions[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.CompletedMissions[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_cmid2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.CompletedMissions[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.CompletedMissions[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m0c0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionOne[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionOne[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m0c1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionOne[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionOne[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m0c2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionOne[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionOne[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m0c3": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionOne[3], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionOne[3] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m0c4": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionOne[4], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionOne[4] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m0c5": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionOne[5], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionOne[5] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m1c0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionTwo[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionTwo[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m1c1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionTwo[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionTwo[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m1c2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionTwo[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionTwo[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m1c3": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionTwo[3], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionTwo[3] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m1c4": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionTwo[4], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionTwo[4] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m1c5": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionTwo[5], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionTwo[5] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m2c0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionThree[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionThree[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m2c1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionThree[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionThree[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m2c2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionThree[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionThree[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m2c3": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionThree[3], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionThree[3] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m2c4": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionThree[4], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionThree[4] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"m2c5": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.MissionThree[5], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.MissionThree[5] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_wmid0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WishedMissions[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WishedMissions[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_wmid1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WishedMissions[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WishedMissions[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"c_wmid2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Medals.WishedMissions[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Medals.WishedMissions[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"startLVL": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.StartRank, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.StartRank = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundXP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundXP, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundXP = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundBXP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundBonusXP, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundBonusXP = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundVP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundValorPoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundValorPoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundBVP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundBonusValorPoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundBonusValorPoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundHP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundHeroPoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundHeroPoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundPP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundPrestigePoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundPrestigePoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"roundBPP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.RoundBonusPrestigePoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.RoundBonusPrestigePoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"totalPP": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Rounded.TotalPrestigePoints, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Rounded.TotalPrestigePoints = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"cpc": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Captures.Captures, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Captures.Captures = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"cpa": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Captures.CapturesAssists, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Captures.CapturesAssists = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"cpd": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Captures.CaptureDefends, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Captures.CaptureDefends = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"rc": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Captures.RocketCaptures, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Captures.RocketCaptures = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ks": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Streaks.KillStreak, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Streaks.KillStreak = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ds": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Streaks.DeadStreak, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Streaks.DeadStreak = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_rs0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.ScoreByFaction[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.ScoreByFaction[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_rs1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.ScoreByFaction[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.ScoreByFaction[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_ki0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.KillsByFaction[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.KillsByFaction[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_ki1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.KillsByFaction[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.KillsByFaction[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_dt0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.DeathsByFaction[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.DeathsByFaction[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_dt1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.DeathsByFaction[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.DeathsByFaction[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_win0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.WinsByFaction[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.WinsByFaction[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_win1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.WinsByFaction[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.WinsByFaction[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_los0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.LossesByFaction[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.LossesByFaction[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ft_los1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByFaction.LossesByFaction[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByFaction.LossesByFaction[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_rs0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.ScoreByKit[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.ScoreByKit[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_rs1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.ScoreByKit[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.ScoreByKit[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_rs2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.ScoreByKit[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.ScoreByKit[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_ki0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.KillsByKit[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.KillsByKit[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_ki1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.KillsByKit[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.KillsByKit[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_ki2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.KillsByKit[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.KillsByKit[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_dt0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.DeathsByKit[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.DeathsByKit[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_dt1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.DeathsByKit[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.DeathsByKit[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_dt2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.DeathsByKit[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.DeathsByKit[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_win0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.WinsByKit[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.WinsByKit[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_win1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.WinsByKit[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.WinsByKit[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_win2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.WinsByKit[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.WinsByKit[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_los0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.LossesByKit[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.LossesByKit[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_los1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.LossesByKit[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.LossesByKit[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"fc_los2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.ByKit.LossesByKit[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.ByKit.LossesByKit[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"kk0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kits.KitKills[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kits.KitKills[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"kk1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kits.KitKills[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kits.KitKills[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"kk2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kits.KitKills[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kits.KitKills[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"kkb0": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kits.KitKilledBy[0], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kits.KitKilledBy[0] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"kkb1": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kits.KitKilledBy[1], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kits.KitKilledBy[1] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"kkb2": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Kits.KitKilledBy[2], 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Kits.KitKilledBy[2] = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"ka": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Teamplay.DamageAssists, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Teamplay.DamageAssists = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"he": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Teamplay.HealSelf, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Teamplay.HealSelf = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
		"drka": func(p *model.HeroStats, value string, pt int) error {
			addition, err := strconv.ParseFloat(value, 64)
			if err != nil {
				return err
			}
			current, err := strconv.ParseFloat(p.Teamplay.DriverAssists, 64)
			if err != nil {
				return err
			}
			sum := current + addition
			p.Teamplay.DriverAssists = strconv.FormatFloat(sum, 'f', 4, 64)
			return nil
		},
	}
)
